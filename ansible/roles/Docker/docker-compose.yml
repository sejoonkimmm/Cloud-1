version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - wordpress_data:/var/www/html
    depends_on:
      - wordpress
    networks:
      - cloud_1_network

  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/mysql
      - ./database/mariadb.cnf:/etc/mysql/mariadb.cnf
    restart: always
    env_file:
      - ../.env
    healthcheck:
      interval: 5s
      retries: 3
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 30s
    networks:
      - cloud_1_network

  wordpress:
    build:
      context: ./wordpress
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    restart: always
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - wordpress_data:/var/www/html
      # - ./wordpress/wp-config.php:/var/www/html/wp-config.php
    networks:
      - cloud_1_network

  phpmyadmin:
    build:
      context: ./phpmyadmin
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8080:8080'
    env_file:
      - ../.env
    depends_on:
      - db
    networks:
      - cloud_1_network

volumes:
  db_data:
  wordpress_data:

networks:
  cloud_1_network:
    driver: bridge